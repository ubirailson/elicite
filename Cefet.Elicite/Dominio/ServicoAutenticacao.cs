//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Elicite
//  @ File Name : ServicoAutenticacao.cs
//  @ Date : 18/11/2007
//  @ Author : 
//
//
using System;
using System.Collections;
using System.Configuration;
using Cefet.Util.Dao;
using Cefet.Elicite.Persistencia;

namespace Cefet.Elicite.Dominio
{
	public class ServicoAutenticacao 
	{
		private IRepositoryProjeto repositorioProjeto;
        private IRepositoryUsuario repositorioUsuario;

        public ServicoAutenticacao()
        {
            repositorioUsuario = (IRepositoryUsuario)AbstractFactoryRepository.GetInstance(
                    ConfigurationManager.AppSettings["METODO_FABRICA"]).GetRepository("Usuario");

            repositorioProjeto = (IRepositoryProjeto)AbstractFactoryRepository.GetInstance(
                    ConfigurationManager.AppSettings["METODO_FABRICA"]).GetRepository("Projeto");
        }

        public ICollection GetAllPaginavel(int tamanhoPagina, int numeroPagina)
        { 
            return repositorioUsuario.GetAllPaginavel( new Usuario(),tamanhoPagina,numeroPagina,
                new ParametroOrder("Nome",AscDesc.Asc));
        }
        public int Size()
        {
            return repositorioUsuario.Size(new Usuario());
        }

		public Usuario Autenticar(String email, String senha)
		{
            try
            {
                Usuario usuario = repositorioUsuario.GetByLogin(email);
                if (usuario.AutenticarSenha(senha))
                    return usuario;
                else
                    return null;
            }
            catch (NegocioException nex)
            {
                throw nex;
            }
            catch (DaoException daoex)
            {
                throw new NegocioException("Erro no banco de dados. ", daoex);
            }
            return null;
		}
		
        /// <summary>
		///  
		///         ///
		/// </summary>
		public IRepositoryProjeto RepositorioProjeto
		{
			get
			{
                return repositorioProjeto;
			}
		}

        public IRepositoryUsuario RepositorioUsuario
        {
            get
            {
                return repositorioUsuario;
            }
        }
	}
}
